version: '3.8'
services:
  bitbucket:
    image: atlassian/bitbucket:9.6.5
    ports:
      - '7990:7990'
      - '7999:7999'
    volumes:
      - bitbucket_home:/var/atlassian/application-data/bitbucket
    networks:
      - default
      - harness-network
  concourse-db:
    image: postgres
    environment:
      POSTGRES_DB: concourse
      POSTGRES_PASSWORD: concourse_pass
      POSTGRES_USER: concourse_user
      PGDATA: /database
      POSTGRES_HOST_AUTH_METHOD: trust #for healthcheck
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U concourse_user -d concourse"]
      interval: 3s
      timeout: 3s
      retries: 5
  concourse:
    image: concourse/concourse
    command: quickstart
    privileged: true
    cgroup: host
    depends_on:
      concourse-db:
        condition: service_healthy
    ports: ["8080:8080"]
    environment:
      CONCOURSE_POSTGRES_HOST: concourse-db
      CONCOURSE_POSTGRES_USER: concourse_user
      CONCOURSE_POSTGRES_PASSWORD: concourse_pass
      CONCOURSE_POSTGRES_DATABASE: concourse
      CONCOURSE_EXTERNAL_URL: http://localhost:8080
      CONCOURSE_ADD_LOCAL_USER: test:test
      CONCOURSE_MAIN_TEAM_LOCAL_USER: test
      # instead of relying on the default "detect"
      CONCOURSE_WORKER_BAGGAGECLAIM_DRIVER: overlay
      CONCOURSE_CLIENT_SECRET: Y29uY291cnNlLXdlYgo=
      CONCOURSE_TSA_CLIENT_SECRET: Y29uY291cnNlLXdvcmtlcgo=
      CONCOURSE_CLUSTER_NAME: tutorial
      CONCOURSE_WORKER_CONTAINERD_DNS_SERVER: "8.8.8.8"
      CONCOURSE_WORKER_RUNTIME: "containerd"
      CONCOURSE_ENABLE_PIPELINE_INSTANCES: "true"
      CONCOURSE_ENABLE_ACROSS_STEP: "true"
      CONCOURSE_ENABLE_RESOURCE_CAUSALITY: "true"
    networks:
      - default
      - harness-network

  # Harness Services
  ng-ui:
    image: harness/nextgenui-signed:0.353.10
    deploy:
      resources:
        limits:
          memory: 16m
    environment:
      - HARNESS_ENABLE_NG_AUTH_UI_PLACEHOLDER=true
    expose:
      - '8080'
    healthcheck:
      test: "curl -s http://localhost:8080/health"
    networks:
      - harness-network

  ng-auth-ui:
    image: harness/ng-auth-ui-signed:1.7.0
    deploy:
      resources:
        limits:
          memory: 12m
    environment:
      - DEPLOYMENT_TYPE=COMMUNITY
    expose:
      - '8080'
    healthcheck:
      test: "curl -s http://localhost:8080/health"
    networks:
      - harness-network

  manager:
    image: harness/manager-signed:79421
    deploy:
      resources:
        limits:
          memory: 780m
    env_file:
      - environment/manager.env
    environment:
      - API_URL=http://${HARNESS_HOST:-host.docker.internal}
      - DELEGATE_GRPC_TARGET=${HARNESS_HOST:-host.docker.internal}:9879
      - LOG_STREAMING_SERVICE_BASEURL=http://${HARNESS_HOST:-host.docker.internal}/log-service/
      - UI_SERVER_URL=http://${HARNESS_HOST:-host.docker.internal}
    expose:
      - '9090'
      - '9879'
    healthcheck:
      test: "curl -s http://localhost:9090/api/health"
      start_period: 5m
    networks:
      - harness-network

  ng-manager:
    image: harness/ng-manager-signed:79421
    deploy:
      resources:
        limits:
          memory: 816m
    restart: on-failure
    env_file: environment/ng-manager.env
    expose:
      - '7090'
    healthcheck:
      test: "curl -s http://localhost:7090/health"
      start_period: 5m
    networks:
      - harness-network

  pipeline-service:
    image: harness/pipeline-service-signed:1.33.8
    deploy:
      resources:
        limits:
          memory: 1000m
    env_file: environment/pipeline-service.env
    expose:
      - '12001'
      - '12011'
      - '14002'
    healthcheck:
      test: "curl -s http://localhost:12001/api/health"
      start_period: 5m
    networks:
      - harness-network

  platform-service:
    image: harness/platform-service-signed:79202
    deploy:
      resources:
        limits:
          memory: 244m
    env_file: environment/platform-service.env
    expose:
      - '9005'
    healthcheck:
      test: "curl -s http://localhost:9005/api/health"
      start_period: 5m
    networks:
      - harness-network

  log-service:
    image: harness/log-service-signed:release-70-ubi
    deploy:
      resources:
        limits:
          memory: 72m
    environment:
      - LOG_SERVICE_DISABLE_AUTH=true
    expose:
      - '8079'
    healthcheck:
      test: "curl http://localhost:8079/healthz"
    networks:
      - harness-network

  scm:
    image: harness/ci-scm-signed:release-150-ubi
    deploy:
      resources:
        limits:
          memory: 48m
    expose:
      - '8091'
    healthcheck:
      test: "/grpc_health_probe -addr=:8091"
    networks:
      - harness-network

  delegate-proxy:
    image: harness/delegate-proxy-signed:79310
    deploy:
      resources:
        limits:
          memory: 24m
    expose:
      - '8080'
    healthcheck:
      test: "curl -s http://localhost:8080/health"
    networks:
      - harness-network

  proxy:
    image: harness/nginx:1.21.4
    deploy:
      resources:
        limits:
          memory: 16m
    expose:
      - '80'
    depends_on:
      - ng-ui
      - manager
      - pipeline-service
      - platform-service
      - delegate-proxy
    healthcheck:
      test: "curl -s http://localhost:80/health"
    networks:
      - harness-network
    ports:
      # Port 80 was changed to 8088 to avoid conflicts
      - '8088:80'
      - '9879:9879'
    volumes:
      - ./config/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./scripts/wait-for-it.sh:/bin/wait-for-it.sh

  redis:
    image: harness/redis:6.2.7-alpine
    deploy:
      resources:
        limits:
          memory: 128m
    expose:
      - '6379'
    healthcheck:
      test: "redis-cli ping"
    networks:
      - harness-network

  mongo:
    image: mongo:4.4.22
    deploy:
      resources:
        limits:
          memory: 320m
    command: --wiredTigerCacheSizeGB 0.125 -f /etc/mongod.conf
    healthcheck:
      test: "mongo --eval 'db.runCommand(\"ping\").ok' --quiet"
    networks:
      - harness-network
    volumes:
      - mongo_data:/data/db
      - ./config/mongo/mongod.conf:/etc/mongod.conf

volumes:
  bitbucket_home:
  mongo_data:

networks:
  harness-network:
    ipam:
      config:
        - subnet: 192.168.0.0/24
